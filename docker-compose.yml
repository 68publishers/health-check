version: "3.7"

services:
    php81:
        build:
            context: .
            dockerfile: Dockerfile
            target: php81
        container_name: 68publishers.health-check.81
        profiles:
            - default
        volumes:
            - .:/var/www/html:cached
        networks:
            - package

    php82:
        build:
            context: .
            dockerfile: Dockerfile
            target: php82
        container_name: 68publishers.health-check.82
        profiles:
            - default
        volumes:
            - .:/var/www/html:cached
        networks:
            - package

    # tested services
    redis5:
        image: redis:5.0.14-alpine
        container_name: 68publishers.health-check.redis5
        profiles:
            - default
            - services
        ports:
            - ${REDIS5_PORT}:${REDIS5_PORT}
        command: redis-server --requirepass ${REDIS5_PASSWORD} --port ${REDIS5_PORT}
        networks:
            - package

    redis6:
        image: redis:6.2.7-alpine
        container_name: 68publishers.health-check.redis6
        profiles:
            - default
            - services
        ports:
            - ${REDIS6_PORT}:${REDIS6_PORT}
        command: redis-server --port ${REDIS6_PORT} --aclfile /opt/bitnami/redis/mounted-etc/users.acl
        volumes:
            - ./.docker/redis6/users.acl:/opt/bitnami/redis/mounted-etc/users.acl
        networks:
            - package

    postgres:
        image: postgres:14.6
        container_name: 68publishers.health-check.postgres
        profiles:
            - default
            - services
        ports:
            - ${POSTGRES_PORT}:${POSTGRES_PORT}
        command: postgres
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        healthcheck:
            test: ["CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'"]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - package

    http-service:
        image: dotronglong/faker:stable
        container_name: 68publishers.health-check.http-service
        profiles:
            - default
            - services
        volumes:
            - ./.docker/http-services:/app/mocks
        ports:
            - ${WEB_SERVICE_PORT}:${WEB_SERVICE_PORT}
        networks:
            - package

networks:
    package:
